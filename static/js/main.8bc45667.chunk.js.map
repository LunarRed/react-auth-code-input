{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["characters","allowedCharacters","containerStyle","inputsRef","useRef","useEffect","sendResult","res","input","onChange","handleOnChange","e","handleOnKeyDown","value","inputs","password","App","className","src","href","padding","inputStyle","width","borderRadius","fontSize","textAlign","marginRight","border","textTransform","ReactDOM","render","document","getElementById"],"mappings":"mPAEiB,SAAC,GAOZ,QANJA,kBAMI,MAPY,EAOZ,MALJC,yBAKI,MAPY,iBAOZ,EAPY,EAOZ,EAPY,WAOZ,EAPY,WAOZ,EAPY,WAMhBC,EACI,EADJA,eAEMC,EAAYC,iBAAlB,IAEAC,qBAAU,WACRF,uBADFE,IAqDA,IAjDA,IAAMC,EAAa,WACjB,IAAMC,EAAMJ,eAAuBK,SAAD,GAACA,OAAUA,EAAjCL,cAAZ,IACAM,GAAYA,EAAZA,IAGIC,EAAkBC,SAAD,GACjBA,qBAAJ,GACE,OAAIA,6BACFA,oCAGFA,kBAEFL,KAGIM,EAAmBD,SAAD,GACtB,cAAM,Q,4DACmB,OAAlB,SAAP,yBACMA,gCAAJ,QACE,oBAGC,kBAGF,MAVL,c,mBAeA,c,sCAKE,KAAME,MAAQF,GAAd,C,gCACIE,UAAYZ,SAAhB,EAAoC,UAEhCE,iBAAqBU,GAArBV,oB,wCAID,IAEF,oBAVH,KA1CI,WAwDEW,G,OACW,IAAjB,cAAqC,SACnCA,MACE,WAEE,UAFF,EAGE,QAHF,EAIE,QAJF,EAKE,KAAO,EALT,kBAME,IAAMC,mBAAQ,UANhB,MAOE,UAPF,EAQE,MARF,MAHED,EAAM,EAAG,EAAf,QAAMA,GAiBN,OAAO,kBAAK,MAAZ,CAhFF,S,ICiFeE,EA9EH,WACV,OACE,yBAAKC,UAAU,QACb,qDACA,yBAAKA,UAAU,UACb,yBAAKC,IAAI,2DACT,yBAAKA,IAAI,qEACT,yBAAKA,IAAI,6DACT,yBAAKA,IAAI,4DACT,yBAAKA,IAAI,6DAEX,2BACE,uBAAGC,KAAK,mDAAR,iCAIF,uCACA,kBAAC,EAAD,MACA,uJAQA,6CACA,wFAEE,6BAFF,kFAMA,kBAAC,EAAD,CACEnB,WAAY,EACZE,eAAgB,CACdkB,QAAS,QAEXC,WAAY,CACVC,MAAO,MACPF,QAAS,MACTG,aAAc,MACdC,SAAU,OACVC,UAAW,SACXC,YAAa,OACbC,OAAQ,kBACRC,cAAe,eAGnB,+e,OChDNC,EAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8bc45667.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\n\nconst AuthCode = ({\n  characters = 6,\n  allowedCharacters = '^[A-Za-z0-9]*$',\n  onChange,\n  password,\n  inputStyle,\n  containerStyle\n}) => {\n  const inputsRef = useRef([])\n\n  useEffect(() => {\n    inputsRef.current[0].focus()\n  }, [])\n\n  const sendResult = () => {\n    const res = inputsRef.current.map((input) => input.value).join('')\n    onChange && onChange(res)\n  }\n\n  const handleOnChange = (e) => {\n    if (e.target.value.match(allowedCharacters)) {\n      if (e.target.nextElementSibling !== null) {\n        e.target.nextElementSibling.focus()\n      }\n    } else {\n      e.target.value = ''\n    }\n    sendResult()\n  }\n\n  const handleOnKeyDown = (e) => {\n    const { key } = e\n    if (key === 'Backspace') {\n      if (e.target.value === '' && e.target.previousElementSibling !== null) {\n        if (e.target.previousElementSibling !== null) {\n          e.target.previousElementSibling.focus()\n          e.preventDefault()\n        }\n      } else {\n        e.target.value = ''\n      }\n      sendResult()\n    }\n  }\n\n  const handleOnFocus = (e) => {\n    e.target.select()\n  }\n\n  const handleOnPaste = (e) => {\n    const value = e.clipboardData.getData('Text')\n    if (value.match(allowedCharacters)) {\n      for (let i = 0; i < characters && i < value.length; i++) {\n        inputsRef.current[i].value = value.charAt(i)\n        if (inputsRef.current[i].nextElementSibling !== null) {\n          inputsRef.current[i].nextElementSibling.focus()\n        }\n      }\n      sendResult()\n    }\n    e.preventDefault()\n  }\n\n  const inputs = []\n  for (let i = 0; i < characters; i++) {\n    inputs.push(\n      <input\n        key={i}\n        onChange={handleOnChange}\n        onKeyDown={handleOnKeyDown}\n        onFocus={handleOnFocus}\n        onPaste={handleOnPaste}\n        type={password ? 'password' : 'text'}\n        ref={(el) => (inputsRef.current[i] = el)}\n        maxLength={1}\n        style={inputStyle}\n      />\n    )\n  }\n\n  return <div style={containerStyle}>{inputs}</div>\n}\n\nexport default AuthCode\n","import React from 'react'\n\nimport AuthCode from 'react-auth-code-input'\nimport './index.css'\n\nconst App = () => {\n  return (\n    <div className='main'>\n      <h1>React Auth Code Input</h1>\n      <div className='badges'>\n        <img src='https://img.shields.io/npm/v/react-auth-code-input.svg' />\n        <img src='https://img.shields.io/badge/code_style-standard-brightgreen.svg' />\n        <img src='https://img.shields.io/badge/license-MIT-brightgreen.svg' />\n        <img src='https://img.shields.io/npm/dt/react-auth-code-input.svg' />\n        <img src='https://img.shields.io/npm/dw/react-auth-code-input.svg' />\n      </div>\n      <p>\n        <a href='https://github.com/drac94/react-auth-code-input'>\n          View documentation on GitHub\n        </a>\n      </p>\n      <h2>Default</h2>\n      <AuthCode />\n      <code>\n        {`\nimport React from 'react'\nimport AuthCode from 'react-auth-code-input'\n\nconst App = () => <AuthCode />\n        `}\n      </code>\n      <h2>Custom Styles</h2>\n      <p>\n        Try writting and then deleting characters using backspace.\n        <br />\n        Pasting works too!, as long as the text copied matches the allowed\n        characters.\n      </p>\n      <AuthCode\n        characters={5}\n        containerStyle={{\n          padding: '16px'\n        }}\n        inputStyle={{\n          width: '2ch',\n          padding: '8px',\n          borderRadius: '8px',\n          fontSize: '40px',\n          textAlign: 'center',\n          marginRight: '12px',\n          border: '1px solid white',\n          textTransform: 'uppercase'\n        }}\n      />\n      <code>\n        {`\nimport React from 'react'\nimport AuthCode from 'react-auth-code-input'\n\nconst App = () => {\n  return (<AuthCode\n    characters={5}\n    containerStyle={{\n      padding: '16px'\n    }}\n    inputStyle={{\n      width: '2ch',\n      padding: '8px',\n      borderRadius: '8px',\n      fontSize: '40px',\n      textAlign: 'center',\n      marginRight: '12px',\n      border: '1px solid white',\n      textTransform: 'uppercase'\n    }}\n  />)\n}\n        `}\n      </code>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
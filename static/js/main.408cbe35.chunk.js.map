{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["characters","allowedCharacters","containerStyle","inputsRef","useRef","useEffect","sendResult","res","input","onChange","handleOnChange","e","handleOnKeyDown","key","handleOnFocus","handleOnPaste","value","i","inputs","onKeyDown","onFocus","onPaste","type","password","ref","el","maxLength","style","inputStyle","App","padding","width","borderRadius","fontSize","textAlign","marginRight","border","textTransform","ReactDOM","render","document","getElementById"],"mappings":"mPAEiB,SAAC,GAOZ,QANJA,kBAMI,MAPY,EAOZ,MALJC,yBAKI,MAPY,iBAOZ,EAPY,EAOZ,EAPY,WAOZ,EAPY,WAOZ,EAPY,WAMhBC,EACI,EADJA,eAEMC,EAAYC,iBAAlB,IAEAC,qBAAU,WACRF,uBADFE,IAsDA,IAlDA,IAAMC,EAAa,WACjB,IAAMC,EAAMJ,eAAuBK,YAAD,OAAWA,EAAjCL,cAAZ,IACAM,GAAYA,EAAZA,IAGIC,EAAkBC,YAClBA,qBAAJ,GACE,OAAIA,6BACFA,oCAGFA,kBAEFL,KAGIM,EAAmBD,YAEvB,cADA,EAAQE,MAEFF,qBAAJ,OAA6BA,gCAC3B,OAAIA,kCACFA,wCACAA,oBAGFA,kBAEFL,MAIEQ,EAAiBH,YACrBA,mBAGII,EAAiBJ,YACrB,IAAMK,EAAQL,wBAAd,QACA,GAAIK,QAAJ,GAAoC,CAClC,IAAK,IAAIC,EAAT,EAAgBA,KAAkBA,EAAID,EAAtC,OAAoDC,IAClDd,mBAA6Ba,SAA7Bb,GACA,OAAIA,iCACFA,wCAGJG,IAEFK,oBAGIO,EAAN,GAxDI,WAyDKD,GACPC,OACE,2BACEL,IADF,EAEEJ,SAFF,EAGEU,UAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,KAAMC,EAAW,WANnB,OAOEC,IAAMC,YAAD,OAAStB,aAPhB,GAQEuB,UARF,EASEC,MAAOC,MAXJX,EAAT,EAAgBA,EAAhB,EAAgCA,IAAK,EAA5BA,GAgBT,OAAO,yBAAKU,MAAOzB,GAAnB,ICzDa2B,EArBH,WACV,OACE,kBAAC,EAAD,CACE7B,WAAY,EACZE,eAAgB,CACd4B,QAAS,QAEXF,WAAY,CACVG,MAAO,MACPD,QAAS,MACTE,aAAc,MACdC,SAAU,OACVC,UAAW,SACXC,YAAa,OACbC,OAAQ,kBACRC,cAAe,gB,OCbvBC,EAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.408cbe35.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\n\nconst AuthCode = ({\n  characters = 6,\n  allowedCharacters = '^[A-Za-z0-9]*$',\n  onChange,\n  password,\n  inputStyle,\n  containerStyle\n}) => {\n  const inputsRef = useRef([])\n\n  useEffect(() => {\n    inputsRef.current[0].focus()\n  }, [])\n\n  const sendResult = () => {\n    const res = inputsRef.current.map((input) => input.value).join('')\n    onChange && onChange(res)\n  }\n\n  const handleOnChange = (e) => {\n    if (e.target.value.match(allowedCharacters)) {\n      if (e.target.nextElementSibling !== null) {\n        e.target.nextElementSibling.focus()\n      }\n    } else {\n      e.target.value = ''\n    }\n    sendResult()\n  }\n\n  const handleOnKeyDown = (e) => {\n    const { key } = e\n    if (key === 'Backspace') {\n      if (e.target.value === '' && e.target.previousElementSibling !== null) {\n        if (e.target.previousElementSibling !== null) {\n          e.target.previousElementSibling.focus()\n          e.preventDefault()\n        }\n      } else {\n        e.target.value = ''\n      }\n      sendResult()\n    }\n  }\n\n  const handleOnFocus = (e) => {\n    e.target.select()\n  }\n\n  const handleOnPaste = (e) => {\n    const value = e.clipboardData.getData('Text')\n    if (value.match(allowedCharacters)) {\n      for (let i = 0; i < characters && i < value.length; i++) {\n        inputsRef.current[i].value = value.charAt(i)\n        if (inputsRef.current[i].nextElementSibling !== null) {\n          inputsRef.current[i].nextElementSibling.focus()\n        }\n      }\n      sendResult()\n    }\n    e.preventDefault()\n  }\n\n  const inputs = []\n  for (let i = 0; i < characters; i++) {\n    inputs.push(\n      <input\n        key={i}\n        onChange={handleOnChange}\n        onKeyDown={handleOnKeyDown}\n        onFocus={handleOnFocus}\n        onPaste={handleOnPaste}\n        type={password ? 'password' : 'text'}\n        ref={(el) => (inputsRef.current[i] = el)}\n        maxLength={1}\n        style={inputStyle}\n      />\n    )\n  }\n\n  return <div style={containerStyle}>{inputs}</div>\n}\n\nexport default AuthCode\n","import React from 'react'\n\nimport AuthCode from 'react-auth-code-input'\n\nconst App = () => {\n  return (\n    <AuthCode\n      characters={5}\n      containerStyle={{\n        padding: '16px'\n      }}\n      inputStyle={{\n        width: '2ch',\n        padding: '8px',\n        borderRadius: '8px',\n        fontSize: '40px',\n        textAlign: 'center',\n        marginRight: '12px',\n        border: '1px solid black',\n        textTransform: 'uppercase'\n      }}\n    />\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}